"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n// unity-voice-frontend/src/middleware.ts\n\n// Protected routes that require authentication\nconst protectedRoutes = [\n    '/topics',\n    '/topics/',\n    '/dashboard',\n    '/profile',\n    '/user-profile'\n];\n// Routes that should redirect authenticated users away\nconst authRoutes = [\n    '/login',\n    '/register',\n    '/signup'\n];\nfunction middleware(request) {\n    const { pathname } = request.nextUrl;\n    // ✅ קריאת authToken מcookies\n    const token = request.cookies.get('authToken')?.value;\n    console.log(`[Middleware] Path: ${pathname}, Token: ${token ? 'present' : 'missing'}`);\n    // Check if the current path is a protected route\n    const isProtectedRoute = protectedRoutes.some((route)=>pathname.startsWith(route));\n    // Check if the current path is an auth route\n    const isAuthRoute = authRoutes.some((route)=>pathname.startsWith(route));\n    // If trying to access protected route without token\n    if (isProtectedRoute && !token) {\n        console.log(`[Middleware] Redirecting to login - no token for protected route: ${pathname}`);\n        const loginUrl = new URL('/login', request.url);\n        loginUrl.searchParams.set('redirect', pathname);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(loginUrl);\n    }\n    // If trying to access auth routes with valid token, redirect to topics\n    if (isAuthRoute && token) {\n        console.log(`[Middleware] Redirecting authenticated user from ${pathname} to /topics`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/topics', request.url));\n    }\n    // Allow the request to continue\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n}\n// Configure which paths the middleware should run on\nconst config = {\n    matcher: [\n        /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public folder files\r\n     */ '/((?!api|_next/static|_next/image|favicon.ico|.*\\\\.png$|.*\\\\.jpg$|.*\\\\.jpeg$|.*\\\\.gif$|.*\\\\.svg$).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEseUNBQXlDO0FBQ0U7QUFHM0MsK0NBQStDO0FBQy9DLE1BQU1DLGtCQUFrQjtJQUN0QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFRCx1REFBdUQ7QUFDdkQsTUFBTUMsYUFBYTtJQUFDO0lBQVU7SUFBYTtDQUFVO0FBRTlDLFNBQVNDLFdBQVdDLE9BQW9CO0lBQzdDLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdELFFBQVFFLE9BQU87SUFFcEMsNkJBQTZCO0lBQzdCLE1BQU1DLFFBQVFILFFBQVFJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGNBQWNDO0lBRWhEQyxRQUFRQyxHQUFHLENBQUMsQ0FBQyxtQkFBbUIsRUFBRVAsU0FBUyxTQUFTLEVBQUVFLFFBQVEsWUFBWSxXQUFXO0lBRXJGLGlEQUFpRDtJQUNqRCxNQUFNTSxtQkFBbUJaLGdCQUFnQmEsSUFBSSxDQUFDQyxDQUFBQSxRQUM1Q1YsU0FBU1csVUFBVSxDQUFDRDtJQUd0Qiw2Q0FBNkM7SUFDN0MsTUFBTUUsY0FBY2YsV0FBV1ksSUFBSSxDQUFDQyxDQUFBQSxRQUNsQ1YsU0FBU1csVUFBVSxDQUFDRDtJQUd0QixvREFBb0Q7SUFDcEQsSUFBSUYsb0JBQW9CLENBQUNOLE9BQU87UUFDOUJJLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLGtFQUFrRSxFQUFFUCxVQUFVO1FBQzNGLE1BQU1hLFdBQVcsSUFBSUMsSUFBSSxVQUFVZixRQUFRZ0IsR0FBRztRQUM5Q0YsU0FBU0csWUFBWSxDQUFDQyxHQUFHLENBQUMsWUFBWWpCO1FBQ3RDLE9BQU9MLHFEQUFZQSxDQUFDdUIsUUFBUSxDQUFDTDtJQUMvQjtJQUVBLHVFQUF1RTtJQUN2RSxJQUFJRCxlQUFlVixPQUFPO1FBQ3hCSSxRQUFRQyxHQUFHLENBQUMsQ0FBQyxpREFBaUQsRUFBRVAsU0FBUyxXQUFXLENBQUM7UUFDckYsT0FBT0wscURBQVlBLENBQUN1QixRQUFRLENBQUMsSUFBSUosSUFBSSxXQUFXZixRQUFRZ0IsR0FBRztJQUM3RDtJQUVBLGdDQUFnQztJQUNoQyxPQUFPcEIscURBQVlBLENBQUN3QixJQUFJO0FBQzFCO0FBRUEscURBQXFEO0FBQzlDLE1BQU1DLFNBQVM7SUFDcEJDLFNBQVM7UUFDUDs7Ozs7OztLQU9DLEdBQ0Q7S0FDRDtBQUNILEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcb3J6aWxcXE9uZURyaXZlXFzXqdeV15zXl9efINeU16LXkdeV15PXlFxcMDcwNTI1XFx1bml0eS12b2ljZS1mcm9udGVuZC0xXFxzcmNcXG1pZGRsZXdhcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdW5pdHktdm9pY2UtZnJvbnRlbmQvc3JjL21pZGRsZXdhcmUudHNcclxuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgdHlwZSB7IE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5cclxuLy8gUHJvdGVjdGVkIHJvdXRlcyB0aGF0IHJlcXVpcmUgYXV0aGVudGljYXRpb25cclxuY29uc3QgcHJvdGVjdGVkUm91dGVzID0gW1xyXG4gICcvdG9waWNzJyxcclxuICAnL3RvcGljcy8nLFxyXG4gICcvZGFzaGJvYXJkJyxcclxuICAnL3Byb2ZpbGUnLFxyXG4gICcvdXNlci1wcm9maWxlJ1xyXG5dO1xyXG5cclxuLy8gUm91dGVzIHRoYXQgc2hvdWxkIHJlZGlyZWN0IGF1dGhlbnRpY2F0ZWQgdXNlcnMgYXdheVxyXG5jb25zdCBhdXRoUm91dGVzID0gWycvbG9naW4nLCAnL3JlZ2lzdGVyJywgJy9zaWdudXAnXTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgY29uc3QgeyBwYXRobmFtZSB9ID0gcmVxdWVzdC5uZXh0VXJsO1xyXG4gIFxyXG4gIC8vIOKchSDXp9eo15nXkNeqIGF1dGhUb2tlbiDXnmNvb2tpZXNcclxuICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuY29va2llcy5nZXQoJ2F1dGhUb2tlbicpPy52YWx1ZTtcclxuICBcclxuICBjb25zb2xlLmxvZyhgW01pZGRsZXdhcmVdIFBhdGg6ICR7cGF0aG5hbWV9LCBUb2tlbjogJHt0b2tlbiA/ICdwcmVzZW50JyA6ICdtaXNzaW5nJ31gKTtcclxuICBcclxuICAvLyBDaGVjayBpZiB0aGUgY3VycmVudCBwYXRoIGlzIGEgcHJvdGVjdGVkIHJvdXRlXHJcbiAgY29uc3QgaXNQcm90ZWN0ZWRSb3V0ZSA9IHByb3RlY3RlZFJvdXRlcy5zb21lKHJvdXRlID0+IFxyXG4gICAgcGF0aG5hbWUuc3RhcnRzV2l0aChyb3V0ZSlcclxuICApO1xyXG4gIFxyXG4gIC8vIENoZWNrIGlmIHRoZSBjdXJyZW50IHBhdGggaXMgYW4gYXV0aCByb3V0ZVxyXG4gIGNvbnN0IGlzQXV0aFJvdXRlID0gYXV0aFJvdXRlcy5zb21lKHJvdXRlID0+IFxyXG4gICAgcGF0aG5hbWUuc3RhcnRzV2l0aChyb3V0ZSlcclxuICApO1xyXG4gIFxyXG4gIC8vIElmIHRyeWluZyB0byBhY2Nlc3MgcHJvdGVjdGVkIHJvdXRlIHdpdGhvdXQgdG9rZW5cclxuICBpZiAoaXNQcm90ZWN0ZWRSb3V0ZSAmJiAhdG9rZW4pIHtcclxuICAgIGNvbnNvbGUubG9nKGBbTWlkZGxld2FyZV0gUmVkaXJlY3RpbmcgdG8gbG9naW4gLSBubyB0b2tlbiBmb3IgcHJvdGVjdGVkIHJvdXRlOiAke3BhdGhuYW1lfWApO1xyXG4gICAgY29uc3QgbG9naW5VcmwgPSBuZXcgVVJMKCcvbG9naW4nLCByZXF1ZXN0LnVybCk7XHJcbiAgICBsb2dpblVybC5zZWFyY2hQYXJhbXMuc2V0KCdyZWRpcmVjdCcsIHBhdGhuYW1lKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobG9naW5VcmwpO1xyXG4gIH1cclxuICBcclxuICAvLyBJZiB0cnlpbmcgdG8gYWNjZXNzIGF1dGggcm91dGVzIHdpdGggdmFsaWQgdG9rZW4sIHJlZGlyZWN0IHRvIHRvcGljc1xyXG4gIGlmIChpc0F1dGhSb3V0ZSAmJiB0b2tlbikge1xyXG4gICAgY29uc29sZS5sb2coYFtNaWRkbGV3YXJlXSBSZWRpcmVjdGluZyBhdXRoZW50aWNhdGVkIHVzZXIgZnJvbSAke3BhdGhuYW1lfSB0byAvdG9waWNzYCk7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy90b3BpY3MnLCByZXF1ZXN0LnVybCkpO1xyXG4gIH1cclxuICBcclxuICAvLyBBbGxvdyB0aGUgcmVxdWVzdCB0byBjb250aW51ZVxyXG4gIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG59XHJcblxyXG4vLyBDb25maWd1cmUgd2hpY2ggcGF0aHMgdGhlIG1pZGRsZXdhcmUgc2hvdWxkIHJ1biBvblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIG1hdGNoZXI6IFtcclxuICAgIC8qXHJcbiAgICAgKiBNYXRjaCBhbGwgcmVxdWVzdCBwYXRocyBleGNlcHQgZm9yIHRoZSBvbmVzIHN0YXJ0aW5nIHdpdGg6XHJcbiAgICAgKiAtIGFwaSAoQVBJIHJvdXRlcylcclxuICAgICAqIC0gX25leHQvc3RhdGljIChzdGF0aWMgZmlsZXMpXHJcbiAgICAgKiAtIF9uZXh0L2ltYWdlIChpbWFnZSBvcHRpbWl6YXRpb24gZmlsZXMpXHJcbiAgICAgKiAtIGZhdmljb24uaWNvIChmYXZpY29uIGZpbGUpXHJcbiAgICAgKiAtIHB1YmxpYyBmb2xkZXIgZmlsZXNcclxuICAgICAqL1xyXG4gICAgJy8oKD8hYXBpfF9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljb3wuKlxcXFwucG5nJHwuKlxcXFwuanBnJHwuKlxcXFwuanBlZyR8LipcXFxcLmdpZiR8LipcXFxcLnN2ZyQpLiopJyxcclxuICBdLFxyXG59OyJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJwcm90ZWN0ZWRSb3V0ZXMiLCJhdXRoUm91dGVzIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJwYXRobmFtZSIsIm5leHRVcmwiLCJ0b2tlbiIsImNvb2tpZXMiLCJnZXQiLCJ2YWx1ZSIsImNvbnNvbGUiLCJsb2ciLCJpc1Byb3RlY3RlZFJvdXRlIiwic29tZSIsInJvdXRlIiwic3RhcnRzV2l0aCIsImlzQXV0aFJvdXRlIiwibG9naW5VcmwiLCJVUkwiLCJ1cmwiLCJzZWFyY2hQYXJhbXMiLCJzZXQiLCJyZWRpcmVjdCIsIm5leHQiLCJjb25maWciLCJtYXRjaGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});